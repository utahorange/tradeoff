{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ritesh/tradeoff/frontend/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\n\n// More detailed sample data for the portfolio\nconst sampleData = [\n  { date: '2024-01-01', value: 10000 },\n  { date: '2024-01-08', value: 10200 },\n  { date: '2024-01-15', value: 10100 },\n  { date: '2024-01-22', value: 10300 },\n  { date: '2024-01-29', value: 10400 },\n  { date: '2024-02-05', value: 10500 },\n  { date: '2024-02-12', value: 10600 },\n  { date: '2024-02-19', value: 10700 },\n  { date: '2024-02-26', value: 10800 },\n  { date: '2024-03-04', value: 10900 },\n  { date: '2024-03-11', value: 11000 },\n  { date: '2024-03-18', value: 10900 },\n  { date: '2024-03-25', value: 10800 },\n  { date: '2024-04-01', value: 10900 },\n  { date: '2024-04-08', value: 11100 },\n  { date: '2024-04-15', value: 11200 },\n  { date: '2024-04-22', value: 11300 },\n  { date: '2024-04-29', value: 11400 },\n  { date: '2024-05-06', value: 11500 },\n  { date: '2024-05-13', value: 11600 },\n  { date: '2024-05-20', value: 11700 },\n  { date: '2024-05-27', value: 11800 },\n  { date: '2024-06-03', value: 11900 },\n  { date: '2024-06-10', value: 12000 },\n];\n\nexport default function Home() {\n  const [timeRange, setTimeRange] = useState('6M');\n  const [currentValue, setCurrentValue] = useState(sampleData[sampleData.length - 1].value);\n  const [previousValue, setPreviousValue] = useState(sampleData[sampleData.length - 2].value);\n\n  const calculatePercentageChange = (current: number, previous: number) => {\n    return ((current - previous) / previous) * 100;\n  };\n\n  const formatCurrency = (value: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    }).format(value);\n  };\n\n  const formatDate = (dateStr: string) => {\n    return new Date(dateStr).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric',\n    });\n  };\n\n  return (\n    <main className=\"min-h-screen p-8 bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto\">\n        <h1 className=\"text-3xl font-bold mb-8\">Portfolio Dashboard</h1>\n        \n        {/* Time range selector */}\n        <div className=\"mb-6\">\n          <div className=\"inline-flex rounded-md shadow-sm\" role=\"group\">\n            {['1M', '3M', '6M', '1Y', 'ALL'].map((range) => (\n              <button\n                key={range}\n                onClick={() => setTimeRange(range)}\n                className={`px-4 py-2 text-sm font-medium rounded-md ${\n                  timeRange === range\n                    ? 'bg-blue-600 text-white'\n                    : 'bg-white text-gray-700 hover:bg-gray-50'\n                }`}\n              >\n                {range}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Portfolio Value Card */}\n        <div className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\n          <h2 className=\"text-xl font-semibold mb-2\">Portfolio Value</h2>\n          <p className=\"text-3xl font-bold text-green-600\">{formatCurrency(currentValue)}</p>\n          <p className={`text-sm ${currentValue >= previousValue ? 'text-green-600' : 'text-red-600'}`}>\n            {currentValue >= previousValue ? '+' : ''}\n            {calculatePercentageChange(currentValue, previousValue).toFixed(2)}% from previous value\n          </p>\n        </div>\n\n        {/* Portfolio Graph */}\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Portfolio Performance</h2>\n          <div className=\"h-[400px]\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart\n                data={sampleData}\n                margin={{\n                  top: 5,\n                  right: 30,\n                  left: 20,\n                  bottom: 5,\n                }}\n                onMouseMove={(e) => {\n                  if (e.activePayload) {\n                    const currentData = e.activePayload[0].payload;\n                    setCurrentValue(currentData.value);\n                    const currentIndex = sampleData.findIndex(d => d.date === currentData.date);\n                    if (currentIndex > 0) {\n                      setPreviousValue(sampleData[currentIndex - 1].value);\n                    }\n                  }\n                }}\n                onMouseLeave={() => {\n                  setCurrentValue(sampleData[sampleData.length - 1].value);\n                  setPreviousValue(sampleData[sampleData.length - 2].value);\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n                <XAxis \n                  dataKey=\"date\" \n                  tickFormatter={formatDate}\n                  tick={{ fontSize: 12 }}\n                  tickCount={6}\n                />\n                <YAxis \n                  tickFormatter={(value) => formatCurrency(value)}\n                  tick={{ fontSize: 12 }}\n                  domain={['auto', 'auto']}\n                />\n                <Tooltip \n                  formatter={(value: number) => [formatCurrency(value), 'Portfolio Value']}\n                  labelFormatter={formatDate}\n                  contentStyle={{\n                    backgroundColor: 'white',\n                    border: '1px solid #f0f0f0',\n                    borderRadius: '8px',\n                    boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n                  }}\n                />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"value\"\n                  stroke=\"#2563eb\"\n                  strokeWidth={2}\n                  dot={{ r: 2 }}\n                  activeDot={{ r: 4 }}\n                  isAnimationActive={true}\n                  animationDuration={1000}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}